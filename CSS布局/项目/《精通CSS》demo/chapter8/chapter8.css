/*《精通CSS》dome chapter8布局*/
/*8.1 计划布局*/

/*8.2 设置基本结构*/
.wrapper {
    width: 920px;
    margin: 0 auto; /*元素水平居中 法1：左右margin都设置成auto，IE5、IE6不支持这种方法 IE浏览器将text-align:center误解为让所有东西居中不只是文本*/
}

.wrapper,
.header,
.content,
.footer {
    border: 1px solid black;
}

/*8.3 浮动布局*/
/*8.3.1 两列浮动布局*/
.primary1 {
    display: inline; /*question2:为什么要加display: inline？*/
    width: 650px;
    height: 100px;
    border: 1px solid black;
    padding-right: 20px;
    float: right;
    /*question1:脱离文档流是什么意思？*/
    /*answer1:文档流是指从左到右、从上到下、符合HTML中标签本身含义的布局，脱离文档流是指将该元素从正常文档流中拿走 不受文档流的布局约束、该元素在原文档流中的所占空间也被清除，
    脱离文档流有2种情况，
    情况1float脱离文档流：其他元素盒子在定位的时候会当作该元素不存在而定位，但是其他元素盒子内的文本会当作该元素存在并且环绕在周围，不管什么元素浮动后都会生成块级框；
    情况2position:absolute脱离文档流：其他元素盒子、其他元素盒子内的文本都会当作该元素不存在*/
}

.secondary1 {
    display: inline; /*question2:为什么要加display: inline？*/
    width: 230px;
    height: 100px;
    border: 1px solid black;
    float: left;
}

.content1 {
    border: 1px solid black;
    overflow: hidden; /*清除浮动 法1：overflow: hidden*/
    /*question3:为什么overflow: hidden能清除浮动？*/
    /*answer3:
    BFC块级格式化上下文，规定了内部块级元素的布局方式；
    BFC布局规则：1块级元素垂直放置 2margin合并 3计算BFC高度时浮动元素也参与计算；
    如何创建BFC：1float不为none 2overflow不为visible 3position为fixed、absolute 4display为inline-block、inline-flex、flex、table-cell、table-caption*/
}

/*8.3.2 三列浮动布局*/
.content2 {
    border: 1px solid black;
    overflow: hidden;
}

.primary2 {
    width: 800px;
    border: 1px solid black;
    float: right;
}

.secondary2 {
    width: 230px;
    border: 1px solid black;
    float: left;
}

.primary2-1 {
    width: 400px;
    border: 1px solid black;
    float: left;
}

.secondary2-2 {
    width: 230px;
    border: 1px solid black;
    padding-right: 20px;
    float: right;
}

/*8.4 固定宽度布局、流式布局、弹性布局*/
/*8.4.1 流式布局*/
/*question4:静态布局／固定宽度布局、流式布局、弹性布局、自适应布局、响应式布局的优缺点？*/
.content3 {
    width: 80%;
    min-width: 992px;
    border: 1px solid black;
    margin: 0 auto;
    overflow: hidden;
}

.primary3 {
    width: 72.82%;
    border: 1px solid black;
    float: right;
}

.secondary3 {
    width: 25%;
    border: 1px solid black;
    float: left;
    /*question5:为什么secondary3是在content3的下面？*/
}

.primary3-1 {
    width: 59.7%;
    border: 1px solid black;
    float: left;
}

.secondary3-2 {
    width: 34.33%;
    border: 1px solid black;
    padding-right: 2.63%;
    float: right;
}

/*8.4.2 弹性布局*/
.content4 {
    width: 92em;
    min-width: 95%;
    border: 1px solid black;
    margin: 0 auto;
    overflow: hidden;
    font-size: 62.5%;
}

.primary4 {
    width: 72.82%;
    border: 1px solid black;
    float: right;
}

.secondary4 {
    width: 25%;
    border: 1px solid black;
    float: left;
}

.primary4-1 {
    width: 59.7%;
    border: 1px solid black;
    float: left;
}

.secondary4-2 {
    width: 34.33%;
    border: 1px solid black;
    padding-right: 2em;
    float: right;
}

/*8.4.3 流式图像、弹性图像*/
.branding1 {
    height: 171px;
    background: url("img/branding.png") no-repeat left top;
}

.branding2 {
    width: 100%;
    overflow: hidden;
}

.branding3 {
    overflow: hidden;
}

.img3 {
    width: 25%;
    padding: 20px;
    float: left;
}

.p3 {
    width: 68%;
    padding: 20px;
    float: right;
}

/*8.5 faux列*/

/*8.6 高度相等的列*/
.wrapper6 {
    width: 100%;
    border: 1px solid black;
    position: relative;
    overflow: hidden;
    /*question6:overflow:hidden到底是从哪里开始被裁剪？*/
    /*answer6:在所有子元素浮动的情况下，以height最大的子元素为界被裁剪*/
}

.box6 {
    width: 250px;
    padding: 20px 20px 520px 20px;
    margin-left: 20px;
    margin-bottom: -500px;
    /*question7:margin为负数怎么影响盒子模型？*/
    /*answer7:盒子模型向内缩进*/
    float: left;
    background: #89ac10 url("img/top.gif") no-repeat left top;
}

.bottom6 {
    position: absolute;
    bottom: 0;
    width: 290px;
    height: 20px;
    margin-left: -20px; /*question8:为什么没有这个会错乱？*/
    background: #89ac10 url("img/bottom.gif") no-repeat bottom left;
}

/*8.7 CSS3列*/
.col {
    column-count: 3;
    column-width: 14em;
    column-gap: 2em;
    column-rule: 1px solid #ccc;
}